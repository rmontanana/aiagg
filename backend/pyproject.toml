[project]
name = "aiagg-backend"
version = "0.1.0"
description = "AI News Aggregator - Modern backend built with FastAPI"
# readme = "README.md"  # No longer needed
requires-python = ">=3.11"
authors = [
    { name = "AI News Aggregator Team" },
]
keywords = ["ai", "news", "aggregator", "fastapi", "python"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
]

dependencies = [
    # Core Framework
    "fastapi>=0.115.13",
    "uvicorn[standard]>=0.32.1",
    "pydantic[email]>=2.10.4",
    "pydantic-settings>=2.10.1",
    
    # Database
    "sqlalchemy>=2.0.36",
    "alembic>=1.14.0",
    "asyncpg>=0.30.0",
    "psycopg2-binary>=2.9.10",
    "greenlet>=3.0.0",
    
    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.19",
    
    # Caching & Background Tasks
    "redis>=5.2.1",
    "celery>=5.4.0",
    "kombu>=5.4.2",
    
    # AI/ML Libraries
    "openai>=1.58.1",
    "sentence-transformers>=3.3.1",
    "beautifulsoup4>=4.12.3",
    "newspaper3k>=0.2.8",
    "requests>=2.32.3",
    
    # Utilities
    "python-dotenv>=1.0.1",
    "structlog>=24.4.0",
    "rich>=13.9.4",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.28.1",
    "ruff>=0.8.4",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
]

# Production deployment extras
prod = [
    "gunicorn>=23.0.0",
    "prometheus-client>=0.21.0",
]

# AI/ML extras for advanced features
ai = [
    "torch>=2.1.0",
    "transformers>=4.40.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
]

# Monitoring and observability
monitoring = [
    "prometheus-client>=0.21.0",
    "sentry-sdk[fastapi]>=2.18.0",
    "opentelemetry-api>=1.27.0",
]

[project.urls]
Homepage = "https://github.com/rmontanana/aiagg"
Documentation = "https://github.com/rmontanana/aiagg/blob/main/README.md"
Repository = "https://github.com/rmontanana/aiagg.git"
"Bug Tracker" = "https://github.com/rmontanana/aiagg/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.28.1",
    "ruff>=0.8.4",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=70",
    "--strict-markers", 
    "--strict-config",
    "-v",
]
asyncio_mode = "auto"
python_files = ["tests/*.py", "test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests (requires database)",
    "slow: Slow running tests",
    "simple: Simple API tests using TestClient",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false